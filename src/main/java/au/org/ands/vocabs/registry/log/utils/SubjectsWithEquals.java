/** See the file "LICENSE" for the full license governing this code. */

package au.org.ands.vocabs.registry.log.utils;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

import au.org.ands.vocabs.registry.db.internal.VocabularyJson.Subjects;

/** Decorated Subjects class with equals() method. */
public final class SubjectsWithEquals {

    /** The Subjects instance wrapped by this instance. */
    private Subjects subjects;

    /* We don't offer the default constructor. */
//    private SubjectsWithEquals() {
//    }

    /** Constructor that accepts a Subjects instance.
     * @param aSubjects The Subjects instance to be wrapped.
     */
    public SubjectsWithEquals(final Subjects aSubjects) {
        subjects = aSubjects;
    }

    /** {@inheritDoc}
     * Equality test based on all the fields of subjects.
     */
    @Override
    public boolean equals(final Object other) {
        if (other == null
                || !(other instanceof SubjectsWithEquals)) {
            return false;
        }
        return EqualsBuilder.reflectionEquals(
                this.subjects, ((SubjectsWithEquals) other).subjects);
    }

    /** {@inheritDoc}
     * The hash code returned is that generated by the superclass.
     */
    @Override
    public int hashCode() {
        return super.hashCode();
    }

    /** {@inheritDoc}
     * toString method based on all the fields of subjects.
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(subjects);
    }

}

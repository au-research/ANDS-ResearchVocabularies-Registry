## Vocabs registry database connection properties.

# This version of the properties file is for automated testing,
# and uses the H2 database.

# Tomcat for Sesame
# Tomcat Port: because we deploy Sesame inside the same container
# as the webapp under test, this must match the port number of the container
# as specified in arquillian.xml!
test.Tomcat.port=8123
# Directory to use for Tomcat work area. Beware: any existing directory
# of this name will be wiped during test!
# NB: This directory is excluded from Eclipse's view of the project
# so as to skip validation errors on the content. (See .project's
# filteredResources element.)
test.Tomcat.directory=tomcattest
# Sesame context path
test.Tomcat.sesame.context=openrdf-sesame

javax.persistence.jdbc.url=jdbc:h2:/PUT-SOMETHING-HERE/h2db/testregistryh2db;AUTO_SERVER=TRUE
# As above, but logging all queries:
#javax.persistence.jdbc.url=jdbc:h2:/PUT-SOMETHING-HERE/h2db/testregistryh2db;AUTO_SERVER=TRUE;TRACE_LEVEL_FILE=2

javax.persistence.jdbc.user=test
javax.persistence.jdbc.password=test

# Initialize schema, wiping out anything already there.
javax.persistence.schema-generation.database.action=drop-and-create

hibernate.connection.driver_class=org.h2.Driver

# Cope with the database server dropping connections after a timeout.
# This is the most basic setting; customize as per instructions at:
#   http://www.mchange.com/projects/c3p0/
hibernate.c3p0.testConnectionOnCheckout=true
# Future work:
# Add this to the Tomcat JVM command line after c3p0 libraries
# are upgraded to version 0.9.5 or later, then tune the debugging
# so c3p0/MLog logging also goes through LogBack.
#  -Dcom.mchange.v2.log.MLog=com.mchange.v2.log.slf4j.Slf4jMLog
# This is needed (at least with MySQL) to ensure that changes made
# to the database externally (i.e., by the portal) are immediately
# visible to JPA queries.
# The value 2 means TRANSACTION_READ_COMMITTED.
# For the possible values, see:
# https://docs.oracle.com/javase/8/docs/api/constant-values.html#java.sql.Connection.TRANSACTION_NONE
# Hmm, let's try without this setting. For the registry database, we won't
# have the portal changing things underneath us.
hibernate.connection.isolation=2

# Absolutely necessary to force instances of java.sql.Timestamp
# to be sent back and forth to the database using UTC.
# Unfortunately, this is Hibernate-specific; there doesn't
# seem to be a way to do this in "pure" JPA.
# See http://in.relation.to/2016/09/12/jdbc-time-zone-configuration-property/
hibernate.jdbc.time_zone=UTC


# Properties for Swagger

# defaultScheme is used in data returned by the API, e.g.,
# Location headers of responses of type 201.
Registry.swagger.defaultScheme=http
Registry.swagger.host=localhost:8080
Registry.swagger.basePath=/vocabs-registry

# Properties for logging

# Location of a copy of the MaxMind GeoLite2 Free database.
# OK to leave commented out for now; geo IP lookups will be skipped.
# Registry.logging.GeoIPDb=...

## File storage

# The top level directory storing all registry data
Registry.storagePath = ./ands_vocabs/registry

# The directory in which all vocabulary data will be stored
Registry.vocabsPath = ${Registry.storagePath}/vocabs

# The directory in which temporary files will be stored
Registry.tempPath = ${Registry.storagePath}/temp

# The directory in which uploaded files will be stored
Registry.uploadsPath = ${Registry.storagePath}/uploads

# The directory in which all SISSVoc spec files will be stored
SISSVoc.specsPath = ${Registry.storagePath}/specs

## Solr

# Specify that an embedded Solr instance will be used.
Registry.Solr.collectionURL = test

## PoolParty

# Use TriG to preserve named graphs; Turtle to lose them.
#PoolPartyHarvester.defaultFormat = TriG
PoolPartyHarvester.defaultFormat = Turtle
PoolPartyHarvester.defaultExportModule = concepts

# The file containing the rewrites to be done to vocabulary metadata
Registry.metadataRewriteMapPath = ${Registry.storagePath}/conf/metadatarewritemap.conf

## Downloads and public-facing APIs

# Prefix to all public-facing URLs to downloads from the Registry.
Registry.downloadPrefix = ${Registry.swagger.defaultScheme}://${Registry.swagger.host}${Registry.swagger.basePath}/download/

# URL of the API of the Sesame server
#SesameImporter.serverUrl = http://localhost:8080/openrdf-sesame/
SesameImporter.serverUrl = http://localhost:${test.Tomcat.port}/${test.Tomcat.sesame.context}/

# Prefix to all SPARQL endpoints provided by OpenRDF Sesame
SesameImporter.sparqlPrefix = http://localhost/repository/api/sparql

# Prefix to all SISSVoc endpoints
SISSVoc.endpointsPrefix = http://localhost/repository/api/lda

# SISSVoc spec file template
SISSVoc.specTemplate = conf/ANDS-ELDAConfig-template.ttl.sample
# SISSVoc spec file template variables
# Top-level of deployment path. Should begin with a slash, but not end with one.
SISSVoc.variable.DEPLOYPATH = /repository/api/lda
# The name of the Vocabulary service
SISSVoc.variable.SERVICE_TITLE = ANDS Vocabularies LDA service
# The name of the Vocabulary service owner
SISSVoc.variable.SERVICE_AUTHOR = ANDS Services
# Contact email address for the Vocabulary service owner
SISSVoc.variable.SERVICE_AUTHOR_EMAIL = services@ands.org.au
# URL of the homepage of the Vocabulary service
# ANDS home page for now; in future, could be
# vocabs.ands.org.au itself.
SISSVoc.variable.SERVICE_HOMEPAGE = http://www.ands.org.au/
# URL prefix of SPARQL endpoint to use for doing queries. Should end with a slash.
SISSVoc.variable.SPARQL_ENDPOINT_PREFIX = http://localhost:8080/openrdf-sesame/repositories/
# Path to the XSL stylesheet that generates the HTML pages.
# Path is relative to the SISSVoc webapp.
SISSVoc.variable.HTML_STYLESHEET = resources/default/transform/ands-ashtml-sissvoc.xsl

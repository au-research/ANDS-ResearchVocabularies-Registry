## Vocabs registry database connection properties.

# Database properties can be specified here instead of/as well as
# in persistence.xml.

# Standard JPA properties
# Replace [path to DB] with something like localhost/vocabs_registry
# The connection parameters for datetime/timezone are important; don't adjust them!
javax.persistence.jdbc.url=jdbc:mysql://[path to DB]?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useLegacyDatetimeCode=false&characterEncoding=UTF-8
javax.persistence.jdbc.driver=com.mysql.jdbc.Driver
javax.persistence.jdbc.user=[db_username]
javax.persistence.jdbc.password=[db_password]

# Hibernate-specific settings
# Cope with the database server dropping connections after a timeout.
# This is the most basic setting; customize as per instructions at:
#   http://www.mchange.com/projects/c3p0/
hibernate.c3p0.testConnectionOnCheckout=true
# Future work:
# Add this to the Tomcat JVM command line after c3p0 libraries
# are upgraded to version 0.9.5 or later, then tune the debugging
# so c3p0/MLog logging also goes through LogBack.
#  -Dcom.mchange.v2.log.MLog=com.mchange.v2.log.slf4j.Slf4jMLog
# This is needed (at least with MySQL) to ensure that changes made
# to the database externally (i.e., by the portal) are immediately
# visible to JPA queries.
# The value 2 means TRANSACTION_READ_COMMITTED.
# For the possible values, see:
# https://docs.oracle.com/javase/8/docs/api/constant-values.html#java.sql.Connection.TRANSACTION_NONE
# Hmm, let's try without this setting. For the registry database, we won't
# have the portal changing things underneath us.
#hibernate.connection.isolation=2

# Absolutely necessary to force instances of java.sql.Timestamp
# to be sent back and forth to the database using UTC.
# Unfortunately, this is Hibernate-specific; there doesn't
# seem to be a way to do this in "pure" JPA.
# See http://in.relation.to/2016/09/12/jdbc-time-zone-configuration-property/
hibernate.jdbc.time_zone=UTC


# Properties for Swagger

# defaultScheme is used in data returned by the API, e.g.,
# Location headers of responses of type 201.
Registry.swagger.defaultScheme=http
Registry.swagger.host=localhost:8080
Registry.swagger.basePath=/vocabs-registry

# Properties for logging

# Location of a copy of the MaxMind GeoLite2 Free database.
# OK to leave commented out for now; geo IP lookups will be skipped.
# Registry.logging.GeoIPDb=...

## File storage

# The top level directory storing all registry data
Registry.storagePath = ./ands_vocabs/registry

# The directory in which temporary files will be stored
Registry.tempPath = ${Registry.storagePath}/temp

# The directory in which all vocabulary data will be stored
Registry.vocabsPath = ${Registry.storagePath}/vocabs

# The directory in which uploaded files will be stored
Registry.uploadsPath = ${Registry.storagePath}/uploads

# The directory in which all SISSVoc spec files will be stored
SISSVoc.specsPath = ${Registry.storagePath}/specs

## Solr

# Specify that an embedded Solr instance will be used.
Registry.Solr.collectionURL = test

## PoolParty

# Use TriG to preserve named graphs; Turtle to lose them.
#PoolPartyHarvester.defaultFormat = TriG
PoolPartyHarvester.defaultFormat = Turtle
PoolPartyHarvester.defaultExportModule = concepts

# The file containing the rewrites to be done to vocabulary metadata
Registry.metadataRewriteMapPath = ${Registry.storagePath}/conf/metadatarewritemap.conf

## Downloads and public-facing APIs

# Prefix to all public-facing URLs to downloads from the Registry.
Registry.downloadPrefix = ${Registry.swagger.defaultScheme}://${Registry.swagger.host}${Registry.swagger.basePath}/api/resource/downloads/

# Local OpenRDF Sesame server
SesameImporter.serverUrl = [Sesame API URL]

# Prefix to all SPARQL endpoints provided by OpenRDF Sesame
SesameImporter.sparqlPrefix = [SPARQL prefix URL]

# Prefix to all SISSVoc endpoints
SISSVoc.endpointsPrefix = [LDA prefix URL]

# SISSVoc spec file template
SISSVoc.specTemplate = [filename to spec file template]
# SISSVoc spec file template variables
# Top-level of deployment path. Should begin with a slash,
# but not end with one.
SISSVoc.variable.DEPLOYPATH = [/path...]
# The name of the Vocabulary service
SISSVoc.variable.SERVICE_TITLE = [title]
# The name of the Vocabulary service owner
SISSVoc.variable.SERVICE_AUTHOR = [author]
# Contact email address for the Vocabulary service owner
SISSVoc.variable.SERVICE_AUTHOR_EMAIL = [email]
# URL of the homepage of the Vocabulary service
# ANDS home page for now; in future, could be
# vocabs.ands.org.au itself.
SISSVoc.variable.SERVICE_HOMEPAGE = [URL]
# URL prefix of SPARQL endpoint to use for doing queries.
# Should end with a slash.
SISSVoc.variable.SPARQL_ENDPOINT_PREFIX = [URL]
# Path to the XSL stylesheet that generates the HTML pages.
# Path is relative to the SISSVoc webapp.
SISSVoc.variable.HTML_STYLESHEET = [path.xsl]

## Notifications

# Prefix to use for URLs of portal pages referred to in notifications.
# E.g., a view page is ${Notifications.portalPrefix}viewById/123.
# Should end with a slash.
Notifications.portalPrefix=[portal URL, e.g., https://myhost/]

### Email

# Hostname of SMTP server used to send generated emails.
Notifications.email.smtpHost=[hostname of SMTP server]
# Port number of SMTP server used to send generated emails.
Notifications.email.smtpPort=25
# The sender email address to put in the "From" line of generated emails.
Notifications.email.senderEmailAddress=[e.g., notifications@hostname]
# The full name of the sender to put in the "From" line of generated emails.
Notifications.email.senderFullName=[e.g., Notifications Service]
# The email address to put in the "Reply-To" line of generated emails.
Notifications.email.replyTo=[e.g., do-not-reply@hostname]
# The subject line to use for generated emails.
# The date of generation of the email is appended.
Notifications.email.subject=[Weekly notifications]
# Filename of file containing HTML template. The file should be put in
# the conf directory of the Registry source. It can then be read
# either from a standalone class or when accessed from the webapp.
Notifications.email.template.HTML=email-template.ftlh
# Filename of file containing plain text template. The file should be put in
# the conf directory of the Registry source. It can then be read
# either from a standalone class or when accessed from the webapp.
Notifications.email.template.plaintext=email-template.ftl

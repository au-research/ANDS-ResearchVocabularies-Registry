<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE ant>
<project basedir="." default="war" name="ANDS-Vocabs-Toolkit">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>

 	<property name="build" value="build" />
	<!-- Configuration files: toolkit.properties, logback.xml -->
	<property name="conf" value="conf" />
	<property name="jar" value="vocabtoolkit.jar" />
	<property name="war" value="vocabtoolkit.war" />
	
	<target name="clean">
        <delete dir="${build}"/>
        <delete file="${jar}"/>
        <delete file="${war}"/>
    </target>

    <path id="compile-main.classpath">
        <fileset dir="lib" includes="**/*.jar" />
        <fileset dir="tomcatlib" includes="**/*.jar" />
    </path>	
	
    <target name="compile-main">
    	<mkdir dir="${build}" />
        <javac debug="true" debuglevel="${debuglevel}" destdir="${build}" includeantruntime="false" source="${source}" target="${target}">
             <src path="src/main/java"/>
             <src path="src/test/java"/>
             <classpath refid="compile-main.classpath"/>
        </javac>
    </target>
	<!-- JAR not usable in the WAR, as JPA seems to require both
	     persistence.xml and entity classes to be at the "top level",
	     i.e., in WEB-INF/classes.
    <target name="jar" depends="compile-main">
    	<jar destfile="${jar}">
    		<fileset dir="${build}" />
   		</jar>
   	</target>
   	-->
    <target name="war" depends="compile-main">
    	<war destfile="${war}">
    		<metainf dir="WebContent/META-INF" />
    		<webinf dir="WebContent/WEB-INF" />
			<!-- Copy persistence.xml -->
    		<mappedresources>
    	        <fileset dir="src/main/java/META-INF" />
		        <globmapper from="*" to="WEB-INF/classes/META-INF/*"/>
   		    </mappedresources>
			<!-- Need to use this trick instead of a lib element because
			     the JAR files are stored in subdirectories.
			     See http://stackoverflow.com/questions/2802671/how-to-perform-ant-path-mapping-in-a-war-task -->
    		<mappedresources>
    	        <fileset dir="lib" includes="**/*.jar" />
   		        <chainedmapper>
   		          <flattenmapper/>
   		          <globmapper from="*" to="WEB-INF/lib/*"/>
   		        </chainedmapper>
   		    </mappedresources>
    		<!-- Can't use JAR; see above. -->
    		<!-- <lib file="${jar}" /> -->
    		<!-- Include raw classes instead. -->
    		<classes dir="${build}" />
       		<mappedresources>
        	    <fileset dir="${conf}" />
        	    <globmapper from="*" to="WEB-INF/classes/*"/>
       	    </mappedresources>
    	</war>
    </target>

</project>
